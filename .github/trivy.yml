---
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Code Checks

on:
  workflow_call:
    inputs:
      trivy_version:
        description: "Trivy version to download"
        type: string
        default: "0.49.1"
        required: false
      trivy_package_checksum:
        description: "Trivy package signature for verification"
        type: string
        default: "8adc8236fafa42757fee770b7009893d2e4536cb2d5c0a2bb7fe00f7e91370e8"
        required: false
      path:
        description: "The path to Terraform directory"
        type: string
        default: terraform
        required: false
      environment:
        description: "The GitHub Actions environment to run in"
        type: string
        default: ""
        required: false
      runner_type:
        description: "The type of runner to use. Choose either ubuntu-<version> or self-hosted"
        type: string
        required: false
        default: "ubuntu-22.04"
      tfenv_version:
        description: "tfenv version to download"
        type: string
        default: "3.0.0"
        required: false
      tfenv_package_checksum:
        description: "tfenv package signature for verification"
        type: string
        default: "463132e45a211fa3faf85e62fdfaa9bb746343ff1954ccbad91cae743df3b648"
        required: false
jobs:
  main:
    name: Checks
    runs-on: ${{ inputs.runner_type }}
    permissions:
      contents: read
      issues: write
      pull-requests: write
      actions: read
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 0
    - name: Set environment
      id: env
      working-directory: ${{ inputs.path }}
      env:
        GH_WF_ENV: ${{ inputs.environment }}
      run: |
        if [[ $GH_WF_ENV == "" ]]; then
          echo "name=default" >> $GITHUB_OUTPUT
        else
          echo "name=$GH_WF_ENV" >> $GITHUB_OUTPUT
        fi
    - name: init / install terraform with tfenv
      uses: sonnen/chromosphere-workflows/.github/actions/terraform-install@main
      with:
        path: ${{ inputs.path }}
        tfenv_version: ${{ inputs.tfenv_version }}
        tfenv_package_checksum: ${{ inputs.tfenv_package_checksum}}
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check -recursive -diff
      working-directory: ${{ inputs.path }}
      continue-on-error: true
    - name: Terraform Format outcome
      id: fmt_outcome
      run: |
        if [ ${{ steps.fmt.outcome }} == "success" ]; then
          echo "TF_FMT_STATUS=:white_check_mark:" >> $GITHUB_OUTPUT
        else
          echo "TF_FMT_STATUS=:x:" >> $GITHUB_OUTPUT
        fi
    - name: Setup trivy
      working-directory: ${{ inputs.path }}
      run: |
        curl -LO https://github.com/aquasecurity/trivy/releases/download/v${{ inputs.trivy_version }}/trivy_${{ inputs.trivy_version }}_Linux-64bit.tar.gz
        TARGET="./trivy_${{ inputs.trivy_version }}_Linux-64bit.tar.gz"
        HASH=$(shasum -a 256 "${TARGET}" 2>/dev/null) || exit 1
        CHECKSUM_GENERATED=$(echo "${HASH}" | cut -d ' ' -f 1)
        if [ "${{ inputs.trivy_package_checksum}}" != "$CHECKSUM_GENERATED" ]; then
          echo "checksum for '$TARGET' is not matched"
          exit 1
        fi
        tar -xzf $TARGET
        chmod +x ./trivy
    - name: Run Trivy vulnerability scanner in config mode
      id: trivy
      working-directory: ${{ inputs.path }}
      run: |
        ./trivy config  --format table --exit-code 1 --severity  UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL --output trivy_output .
      continue-on-error: true
    - name: Set Trivy Results to Output
      working-directory: ${{ inputs.path }}
      id: trivy_outcome
      run: |
        if [ "${{ steps.trivy.outcome }}" == "success" ]; then
          echo "TRIVY_RESULTS<<EOF" >> $GITHUB_OUTPUT
          echo "No security violations found" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "TRIVY_STATUS=:white_check_mark:" >> $GITHUB_OUTPUT
        else
          echo 'TRIVY_RESULTS<<EOF' >> $GITHUB_OUTPUT
          cat ./trivy_output >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo "TRIVY_STATUS=:x:" >> $GITHUB_OUTPUT
        fi
    - name: Set up TFLint
      uses: terraform-linters/setup-tflint@0e4c4561283d7e3336c315c59e5b0be733577c6e
      with:
        tflint_wrapper: true
    - name: Init TFLint
      working-directory: ${{ inputs.path }}
      run: tflint --init
    - name: Run TFLint
      id: tflint
      working-directory: ${{ inputs.path }}
      run: tflint -f compact
      continue-on-error: true
    - name: Set tflint outcome
      id: tflint_outcome
      env:
        TF_LINT_OUTPUT: ${{ steps.tflint.outputs.stdout }}
      run: |
        if [ ${{ steps.tflint.outputs.exitcode }} -gt 0 ]; then
          echo "TFLINT_OUTCOME=failure" >> $GITHUB_OUTPUT
          echo "TFLINT_SUMMARY<<EOF"$'\n'"$TF_LINT_OUTPUT"$'\n'EOF >> $GITHUB_OUTPUT
          echo "TFLINT_STATUS=:x:" >> $GITHUB_OUTPUT
        else
          echo "TFLINT_OUTCOME=success" >> $GITHUB_OUTPUT
          echo "TFLINT_SUMMARY=No violations found" >> $GITHUB_OUTPUT
          echo "TFLINT_STATUS=:white_check_mark:" >> $GITHUB_OUTPUT
        fi
    - name: Add Code Checks Comment to PR
      uses: thollander/actions-comment-pull-request@bc14ce351a6a25022a490f2be0570c700083a7fe
      if: always() && github.event_name == 'pull_request'
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        message: |
          ### Environment: `${{ steps.env.outputs.name }}`

          #### Terraform Format Check ⚙️ `${{ steps.fmt.outcome }}` ${{ steps.fmt_outcome.outputs.TF_FMT_STATUS }}
          #### Trivy Security Scan ⚙️ `${{ steps.trivy.outcome }}` ${{ steps.trivy_outcome.outputs.TRIVY_STATUS }}
          #### TFLint Check ⚙️ `${{ steps.tflint_outcome.outputs.TFLINT_OUTCOME }}` ${{ steps.tflint_outcome.outputs.TFLINT_STATUS }}

          <details><summary>Show Trivy Check Results</summary>

          <pre>
          ${{ steps.trivy_outcome.outputs.TRIVY_RESULTS }}
          </pre>

          </details>

          <details><summary>Show TFLint Check Results</summary>

          <pre>
          ${{ steps.tflint_outcome.outputs.TFLINT_SUMMARY }}
          </pre>

          </details>

          *Pusher: @${{ github.actor }}, Action: `${{ github.event_name }}`, Working Directory: `${{ inputs.path }}`, Workflow: `${{ github.workflow }}`*
        comment_tag: checks-${{ steps.env.outputs.name }}
    - name: Get checks status
      run: |
        if [ "${{ steps.fmt.outcome }}" != "success" ] ||
           [ "${{ steps.trivy.outcome }}" != "success" ] ||
           [ "${{ steps.tflint_outcome.outputs.TFLINT_OUTCOME }}" != "success" ]; then
          exit 1
        fi
